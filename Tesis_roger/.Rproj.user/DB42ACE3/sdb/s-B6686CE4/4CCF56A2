{
    "contents" : "library(fpc)\nlibrary (cluster)\nlibrary (lsa)\nlibrary (xlsx)\nlibrary (plotly)\nlibrary(ggplot2)\n\n#instalar paquete lsa, cluster\n\ngetwd()\nsetwd(\"C:/Users/USUARIO/Dropbox/Tesis 4.1/Tesis 4.1/Tesis_roger/Scripts\")\ngetwd()\ndir()\n\n#----------------------- Leer el CORPUS -------------------------------------\ncorpus <- read.csv(\"../Data/dataset_27_enfermedades.csv\", header = T) # 27 variables\n\nMatrxCorpus <- data.matrix (corpus) #convertir a una matriz numerica\nMatrxCorpus\n\nTransponer=t(MatrxCorpus)# t() es una Matriz Transpuesta, lo que siginifica que las enfermedades las ubica en donde vasla las personas y viceversa\n\n# ----------------    COSENO ---------------------------------\ncoseno=cosine(t(MatrxCorpus[1:692, 5:31])) #Funcion coseno para  ver la similitud que tiene un paciente con otra en base a las enfermedades\n#write.xlsx((coseno),'Coseno.xlsx')   # Exportar la matriz t (Pacientes)\n\ncosenoTerminos=cosine(MatrxCorpus[1:692, 5:31]) #Funcion coseno para ver la similitud de una enfermedad con otra en vase a las personas\nplot(coseno)\n#---------------------------------  LSA  ------------------------------------\n\nmyLSAspace<-lsa(MatrxCorpus[1:692, 5:31]) # se crea un espacio de Lsa que contiene las 3 matrices \n\n\ntk<-myLSAspace$tk\ndk<-myLSAspace$dk\nsk<-matrix(myLSAspace$sk)\n\nmyterm= myLSAspace$dk*myLSAspace$sk\nmydoc= myLSAspace$tk*myLSAspace$sk\n\nfreq = rowSums(dk)\nmatrix(freq)\nfreq_df = data.frame(freq)\nhead(freq_df)\n#write.xlsx(as.matrix(tk),'Matrix t(27 enfer).xlsx')   # guarda la matriz tk\n\n#terminFreq=rowSums(MatrxCorpus[1:692, 5:29])\n#matrix(terminFreq)\n#head(terminFreq)\n\nrownames(data.frame(MatrxCorpus[100:111, 1])) #\n\nas.character(MatrxCorpus[, 1]) #\n\nas.matrix(MatrxCorpus[0, 5:27]) #\n\n\n# Grafica Matriz t (Pacientes)\n\nplot(tk[1:692, 1:2],  type=\"n\", col=\"blue\", xlab = \"Eje x \", ylab = \"Eje y\", main = \"Grafica Documentos y Enfermedades\")\n\ntext(tk[1:692, 1:2], as.character(MatrxCorpus[, 1]), col=\"blue\")\n\n# Grafica Matriz d (Enfermedades) \n\nplot(dk[1:27, 1:2], type=\"n\", col=\"blue\", xlim = c(-0.7,0.20), ylim = c(-0.8,0.8), xlab = \"Eje x \", ylab = \"Eje y\", main = \"Grafica Documentos y Enfermedades\")\ntext(dk[1:27, 1:2], rownames(data.frame(dk[1:27,1:2 ])), col=\"red\")\n\n#grafica 3 Matriz t (Pacientes) con plotly\n\nplotly1<-qplot(x=tk[1:692, 1] , y=tk[1:692, 2], colour=I('orange'), geom = \"auto\",main = \"Matriz t (Pacientes)\") # se crea una variable llamada plotly1 que guarda las \n                                                             # 2 columnas de la matriz t(personas) con todos sus datos\nggplotly(plotly1, tooltip = c('x','y','colour'))# Se crea la grafica de la matriz t(Pacientes) con plotly\n\n#grafica  Matriz d (Enferedades) con plotly\n\nplot_ly(x=dk[1:27, 1], y=dk[1:27, 2], mode = \"markers\")# Se crea una grafica de la matriz d (Enfermedades)\n                      \n# --------------- DBSCAN ---------------------------\n\ncluster1 <- dbscan(tk[1:692, 1:2], 0.01, MinPts =12)# 3 clusters eps= 0.01\n\ncluster1 <- dbscan(tk[1:692, 1:2], 0.011, MinPts = 80)# 2 clusters eps= 0.013\n\ncluster1\ncluster2\n\n\nc1 <- cluster1$cluster\nc2 <- cluster2$cluster\nc3 <- cluster3$cluster\n\nView(c1)\nView(c2)\nView(c3)\n\n#write.xlsx((c1),'DBSCAN.xlsx')\n\n#------------  diseÃ±o DBSCAN---\n\n# ejmplo 1 Cluster 1 matrix t\ncolor<- ifelse(c1==0, \"yellow\",ifelse(c1==1, \"blue\", ifelse(c1==2, \"red\", ifelse(c1==3, \"DeepPink\", \"green3\")))) # 3 clusters eps= 0.01\npar(bg = \"8\")# poner el fondo gris\n\nplot(tk[1:692, 1:2], type = 'n', pch=19,  main=\"eps = 0.01  amarillo= 0, azul = 1, verde = 2\",xlab = \"Grupo Pacientes\", ylab = \"Grupo Pacientes\")\n\ntext(tk[1:692, 1:2], as.character(MatrxCorpus[, 1]), col = color)\ntext(coseno)\n\n\n\n#---------------------- Kmeans---------------------------------\n\nscale(tk[1:692, 1:2])\n\nk.means<- kmeans((tk[1:692, 1:2]),5)\n\nk.means2<- kmeans((tk[1:692, 1:2]), centers = 3,  nstart = 200,  trace=FALSE)\n\nk.means2tabla<-table(tk[1:692, 1:1], k.means2$cluster)\n#write.xlsx((k.means2tabla),'matrix de confucion.xlsx')   # Exportar la matriz de confucion de kmeans \n\nk.means2$cluster\nk.means2$size\n\nattributes(k.means)\n\nk.means$centers\nk.means$cluster\nk.means$size\n\n\ncor(tk[1:692, 1:2])# indetifica la correlacion e el eje x, y\n\nlibrary(psych)\n\n\ntable(tk[1:692, 1:1], k.means2$cluster)\nclusplot((tk[1:692, 1:2]), k.meas2$cluster, main='2D representation of the Cluster solution', color=TRUE, shade=TRUE,\n         labels=1, lines=0)\nclusplot((tk[1:692, 1:2]), k.means$cluster, main='2D representation of the Cluster solution', color=TRUE, shade=TRUE,\n        labels=1, lines=0)\n\n\n#---------------------- graficas kmeasn\ncolor<- ifelse(k.means$cluster==1, \"DeepPink\",ifelse(k.means$cluster==2, \"green3\",ifelse(k.means$cluster==3, \"red\", ifelse(k.means$cluster==4, \"yellow\", ifelse(k.means$cluster==5, \"blue\", ifelse(k.means$cluster==6, \"brown\", \"purple\"))))))# 3 clusters eps= 0.01\npar(bg = \"8\")# poner el fondo gris\n\nplot(tk[1:692, 1:2], type = 'n', xlim = c(-0.09,0),ylim = c(-0.08,0.1), pch=19,  main=\"Grafico Kmeans\",xlab = \"Grupo Pacientes\", ylab = \"Grupo Pacientes\")\n\ntext(tk[1:692, 1:2], as.character(MatrxCorpus[, 1]), col = color)\n\n\n#------------------ grafica 2\ncolor<- ifelse(k.means2$cluster==1, \"DeepPink\",ifelse(k.means2$cluster==2, \"green3\",ifelse(k.means2$cluster==3, \"red\", ifelse(k.means2$cluster==4, \"yellow\", ifelse(k.means2$cluster==5, \"blue\", ifelse(k.means2$cluster==6, \"brown\", \"purple\"))))))# 3 clusters eps= 0.01\npar(bg = \"8\")# poner el fondo gris\n\nplot(tk[1:692, 1:2], type = 'n', xlim = c(-0.09,0),ylim = c(-0.08,0.1), pch=19,  main=\"Grafico Kmeans\",xlab = \"Grupo Pacientes\", ylab = \"Grupo Pacientes\")\n\ntext(tk[1:692, 1:2], as.character(MatrxCorpus[, 1]), col = color)\n\n\n#-------grafica kmeans 3 cluster------------\nplot(tk[1:692, 1:2], type = 'n')\ntext(tk[1:692, 1:2], as.character(MatrxCorpus[, 1]), col=k.means2$cluster)\n\n# Representacion de los centros da cada grupo\npoints(k.means2$centers,cex=2, col=14, pch=19)\n\n# Representacion del centro de gravedad del conjunto de datOS\n# colMeans: calcula el promedio de cada fila tan de x como de y para tener el centro delos datos\npoints(matrix(colMeans(tk[1:692, 1:2]), nrow = 1, ncol = 2), cex=3, col=15, pch=19)#\n\n\n\n",
    "created" : 1456695279289.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3699831950",
    "id" : "4CCF56A2",
    "lastKnownWriteTime" : 1470948786,
    "path" : "C:/Users/USUARIO/Dropbox/Tesis 4.1/Tesis 4.1/Tesis_roger/Scripts/tesis_27_enfermedades.R",
    "project_path" : "Scripts/tesis_27_enfermedades.R",
    "properties" : {
        "notebook_format" : "html_document",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "type" : "r_source"
}